#!/bin/bash

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ –±–µ–∑ Docker

echo "üöÄ Starting n8n-ai components locally..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
cleanup() {
    echo ""
    echo "üõë Stopping all services..."
    pkill -f "tsx.*test-server"
    pkill -f "vite.*preview"
    exit 0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Ctrl+C
trap cleanup INT

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä–∫—É
if [ ! -d "packages/n8n-ai-orchestrator/dist" ]; then
    echo "üî® Building packages..."
    pnpm build
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º orchestrator
echo ""
echo "1Ô∏è‚É£ Starting Orchestrator API (port 3000)..."
cd packages/n8n-ai-orchestrator
ORCH_PORT=3000 npx tsx src/test-server.ts &
ORCH_PID=$!
cd ../..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ orchestrator
echo "   Waiting for orchestrator..."
for i in {1..10}; do
    if curl -s http://localhost:3000/api/v1/ai/health > /dev/null 2>&1; then
        echo "   ‚úÖ Orchestrator is ready!"
        break
    fi
    sleep 1
done

# –ó–∞–ø—É—Å–∫–∞–µ–º UI
echo ""
echo "2Ô∏è‚É£ Starting UI Panel (port 5173)..."
cd packages/n8n-ai-panel
npx vite preview --port 5173 &
UI_PID=$!
cd ../..

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo ""
echo "‚úÖ All services started!"
echo ""
echo "üåê Access points:"
echo "   - UI Panel: http://localhost:5173"
echo "   - API Health: http://localhost:3000/api/v1/ai/health"
echo ""
echo "üìù Test workflow creation:"
echo '   curl -X POST http://localhost:3000/plan \'
echo '     -H "Content-Type: application/json" \'
echo '     -d '\''{"prompt": "Create webhook that posts to Slack"}'\'''
echo ""
echo "Press Ctrl+C to stop all services"
echo ""

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait